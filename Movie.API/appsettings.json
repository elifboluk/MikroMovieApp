{
  "ConnectionString": {
    "SqlServer": "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=MikroMovieDb;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False"
  },
  "TokenOption": {
    "Audience": [ "www.authserver.com", "www.miniapi1.authserver.com" ],
    "Issuer": "www.authserver.com",
    "AccesTokenExpiration": 5,
    "RefreshTokenExpiration": 600,
    "SecurityKey": "mysecuritykeymysecuritykeymysecuritykeymysecuritykey"
  },

  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*"
}

/*
Options Pattern:
    app.setting içerisindeki tutmuş olduğumuz key-value'lara bir class üzerinden erişmemize imkan sağlayan pattern'dir.

"Token Options": Token Options, JWT (JSON Web Token) oluştururken kullanılan parametreleri içeren bir yapıdır.
{
"Audience": Token hangi api'lere istek yapabilir? Bu parametre, JWT'nin hangi amaçla kullanılacağını belirler. JWT'nin kullanılacağı hedef uygulamanın adını veya URL'sini temsil eder. Bu, JWT'nin sadece belirli bir hedefe gönderilmesini sağlar.

"Issuer": Bu token'ı kim dağıtmış? Gerçek dünyada hangi host üzerinden dağıtılıyor? Bu parametre, JWT'nin kim tarafından oluşturulduğunu belirtir. JWT'yi oluşturan kuruluşun adını veya URL'sini içerir.

"AccesTokenExpiration":  Bu parametre, oluşturulan JWT'nin geçerlilik süresini belirler. Geçerlilik süresi, JWT'nin ne kadar süre boyunca kullanılabileceğini belirler. (5 dakika)

"RefreshTokenExpiration": Bu parametre, yenileme tokenlarının ne kadar süreyle geçerli olacağını belirler. Yenileme tokenları, JWT'nin geçerlilik süresi dolduğunda yeniden oluşturmak için kullanılan özel tokenlardır. (600 dakika)

"SecurityKey": JWT'nin şifreleme işlemi için kullanılacak olan güvenlik anahtarını içerir. Bu anahtar, JWT'nin güvenli bir şekilde iletilmesini sağlar ve JWT'nin kimlik doğrulama sürecinde kullanılmasına izin verir.
}
  */
